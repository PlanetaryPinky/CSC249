/*
CSC 249
M3T1 - Merge Sort
Andres Ortiz
2/25/24
*/

#include <iostream>
#include <string>
using namespace std;

void SelectionSort(int* numbers, int numbersSize) {
    for (int i = 0; i < numbersSize - 1; i++) {
        // Find index of smallest remaining element
        int indexSmallest = i;
        for (int j = i + 1; j < numbersSize; j++) {
            if (numbers[j] < numbers[indexSmallest]) {
                indexSmallest = j;
            }
        }

        // Debug statement to show the selection process
        cout << "Pass " << i + 1 << ": Selecting index " << indexSmallest << " (value: " << numbers[indexSmallest] << ") to swap with index " << i << " (value: " << numbers[i] << ").\n";

        // Swap numbers[i] and numbers[indexSmallest]
        int temp = numbers[i];
        numbers[i] = numbers[indexSmallest];
        numbers[indexSmallest] = temp;

        // Debug statement to show the array state after each pass
        cout << "After pass " << i + 1 << ": ";
        for (int k = 0; k < numbersSize; k++) {
            cout << numbers[k] << " ";
        }
        cout << "\n";
    }
}

string ArrayToString(int* array, int arraySize) {
    // Special case for empty array
    if (0 == arraySize) {
        return string("[]");
    }

    // Start the string with the opening '[' and element 0
    string result = "[" + to_string(array[0]);

    // For each remaining element, append comma, space, and element
    for (int i = 1; i < arraySize; i++) {
        result += ", ";
        result += to_string(array[i]);
    }

    // Add closing ']' and return result
    result += "]";
    return result;
}

int main() {
    // Create an array of numbers to sort
    int numbers[] = {10, 2, 78, 4, 45, 32, 7, 11};
    int numbersSize = sizeof(numbers) / sizeof(numbers[0]);

    // Display the contents of the array
    cout << "UNSORTED: " << ArrayToString(numbers, numbersSize) << endl;

    // Call the SelectionSort function with debug statements
    SelectionSort(numbers, numbersSize);

    // Display the sorted contents of the array
    cout << "SORTED:   " << ArrayToString(numbers, numbersSize) << endl;
}
